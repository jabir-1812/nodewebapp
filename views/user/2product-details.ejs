<style>
    body {
  font-family: sans-serif;
}

.image-zoom-container {
  display: flex;
  gap: 20px;
  margin-top: 20px;
}

.img-wrapper {
  position: relative;
  width: 400px;
  height: 400px;
}

#mainImage {
  width: 100%;
  height: 100%;
  display: block;
}

#lens {
  position: absolute;
  border: 1px solid #000;
  width: 100px;
  height: 100px;
  opacity: 0.4;
  background-color: #ccc;
  cursor: none;
  display: none;
}

#result {
  width: 400px;
  height: 400px;
  border: 1px solid #000;
  background-repeat: no-repeat;
  display: none;
}

/* Thumbnail Slider */
.thumbnail-slider {
  display: flex;
  align-items: center;
  margin-top: 20px;
  width: 600px;
  overflow: hidden;
}

.thumbnails {
  display: flex;
  gap: 10px;
  overflow-x: auto;
  scroll-behavior: smooth;
  max-width: 500px;
}

.thumbnails img {
  width: 80px;
  height: 80px;
  cursor: pointer;
  border: 2px solid transparent;
  transition: border 0.3s;
}

.thumbnails img:hover,
.thumbnails img.active {
  border: 2px solid #000;
}

#prevBtn,
#nextBtn {
  background-color: #eee;
  border: none;
  font-size: 24px;
  cursor: pointer;
  padding: 5px 10px;
}

  </style>
<%- include("../../views/partials/user/header") %>
<a href="/">Home</a> > <a href="/shop">Shop</a> > <%= product.productName %>

<% if(product){ %>
    <div class="image-zoom-container">
        <div class="img-wrapper" id="imgWrapper">
            <img id="mainImage" src="/uploads/product-images/<%= product.productImage[0] %>" width="440" height="440">
            <div id="lens"></div>
        </div>
        <div id="result"></div>
    </div>

    <!-- Thumbnail Slider -->
    <div class="thumbnail-slider">
    <button id="prevBtn">&#10094;</button>
    <div class="thumbnails" id="thumbnails">
        <% for(let i=0;i< product.productImage.length;i++){ %>
            <img src="/uploads/product-images/<%= product.productImage[i] %>" data-full="/uploads/product-images/<%= product.productImage[i] %>">
        <% } %>
    </div>
    <button id="nextBtn">&#10095;</button>
    </div>

    <p>product brand: <%= product.brand?.brandName %></p>
    <p>product description:<%= product.description %></p>
    <% if(product.quantity<=10){ %>
        <p>Only <%= product.quantity %> left</p>
        <% }%>
    <p><strong> Rs.<%= product.salePrice %></strong></p>
    <p>Rs. <strike><%= product.regularPrice %></strike></p>
    <% let higherDiscount=Math.max(product.productOffer,product.brandOffer,product.categoryOffer) %>
    <p class="text-success">Discount: <%= higherDiscount %>%</p>
    <% if (product.quantity===0){ %>
        <strong>Out of stock</strong>
        <button>Notify me</button>
        <% }else{ %>
            <button>Add to cart</button>
            <%}%>
<% }else{ %>
    <p>product not found</p>
<% } %>

<%- include("../../views/partials/user/footer") %>

<script>
    const image = document.getElementById("mainImage");
const lens = document.getElementById("lens");
const result = document.getElementById("result");
const wrapper = document.getElementById("imgWrapper");

const thumbnails = document.querySelectorAll(".thumbnails img");
const thumbContainer = document.getElementById("thumbnails");
const prevBtn = document.getElementById("prevBtn");
const nextBtn = document.getElementById("nextBtn");

let zoom = 2;

function updateZoomImage(src) {
  image.src = src;
  result.style.backgroundImage = `url(${src})`;
  result.style.backgroundSize = `${image.width * zoom}px ${image.height * zoom}px`;
}

// Zoom Logic
wrapper.addEventListener("mousemove", moveLens);
wrapper.addEventListener("mouseenter", () => {
  lens.style.display = "block";
  result.style.display = "block";
});
wrapper.addEventListener("mouseleave", () => {
  lens.style.display = "none";
  result.style.display = "none";
});

function moveLens(e) {
  const rect = image.getBoundingClientRect();
  const x = e.clientX - rect.left;
  const y = e.clientY - rect.top;

  const lensWidth = lens.offsetWidth;
  const lensHeight = lens.offsetHeight;

  let lensX = x - lensWidth / 2;
  let lensY = y - lensHeight / 2;

  lensX = Math.max(0, Math.min(lensX, image.width - lensWidth));
  lensY = Math.max(0, Math.min(lensY, image.height - lensHeight));

  lens.style.left = `${lensX}px`;
  lens.style.top = `${lensY}px`;

  result.style.backgroundPosition = `-${lensX * zoom}px -${lensY * zoom}px`;
}

// Thumbnail click logic
thumbnails.forEach(thumb => {
  thumb.addEventListener("click", () => {
    thumbnails.forEach(t => t.classList.remove("active"));
    thumb.classList.add("active");
    const fullImage = thumb.getAttribute("data-full");
    updateZoomImage(fullImage);
  });
});

// Scroll buttons
prevBtn.addEventListener("click", () => {
  thumbContainer.scrollBy({ left: -100, behavior: "smooth" });
});

nextBtn.addEventListener("click", () => {
  thumbContainer.scrollBy({ left: 100, behavior: "smooth" });
});

// Initial setup
updateZoomImage(image.src);
thumbnails[0].classList.add("active");

</script>