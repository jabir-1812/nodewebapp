<%- include("../../../views/partials/admin/header") %>
<style>
    .main-content {
    margin-left: 250px;
    margin-top: 70px;
    padding: 2rem;
    min-height: calc(100vh - 120px);
    background-color: #f5f7fa;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }
</style>

<div class="main-content">
<div class="container mt-5">
  <h2 class="mb-4">Order Details - <%= order.orderId %></h2>

  <!-- User Info -->
  <div class="card mb-3 shadow-sm">
    <div class="card-header bg-dark text-white">User Details</div>
    <div class="card-body">
      <p><strong>Name:</strong> <%= order.userId?.name %></p>
      <p><strong>Email:</strong> <%= order.userId?.email %></p>
      <p><strong>Phone:</strong> <%= order.userId?.phone || "-" %></p>
    </div>
  </div>

  <!-- Shipping Address -->
  <div class="card mb-3 shadow-sm">
    <div class="card-header bg-dark text-white">Shipping Address</div>
    <div class="card-body">
      <p><strong>Name:</strong> <%= order.shippingAddress.name %></p>
      <p><strong>City:</strong> <%= order.shippingAddress.city %></p>
      <p><strong>State:</strong> <%= order.shippingAddress.state %></p>
      <p><strong>Pincode:</strong> <%= order.shippingAddress.pincode %></p>
      <p><strong>Phone:</strong> <%= order.shippingAddress.phone %></p>
    </div>
  </div>

  <!-- Order Items -->
  <div class="order-card">
  <h3>Order ID: <%= order.orderId %></h3>
  <p>User: <%= order.userId?.name %></p>
  <p>Overall Status: <span id="order-status"><%= order.orderStatus %></span></p>

  <table class="table table-bordered table-hover mt-4 align-middle">
    <thead class="table-dark text-center">
      <tr>
        <th>Product</th>
        <th>Qty</th>
        <th>Price</th>
        <th>Item Status</th>
        <th>Return Status</th>
      </tr>
    </thead>
    <tbody>
      <% order.orderItems.forEach(item => { %>
        <tr>
          <td>
            <div class="d-flex align-items-center">
              <img src="/uploads/product-images/<%= item.productImage %>" alt="<%= item.productName %>" width="50" class="rounded me-2">
              <span><%= item.productName %></span>
            </div>
          </td>
          <td class="text-center"><%= item.quantity %></td>
          <td class="text-center">â‚¹<%= item.price %></td>

          <!-- Item Status with Update -->
          <td class="text-center">
            <div class="d-flex justify-content-center align-items-center gap-2">
              <select class="form-select form-select-sm w-auto status-select" 
                data-order-id="<%= order.orderId %>" data-item-id="<%= item._id %>">
                <option value="Pending" <%= item.itemStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                <option value="Shipped" <%= item.itemStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                <option value="Out for Delivery" <%= item.itemStatus === 'Out for Delivery' ? 'selected' : '' %>>Out for Delivery</option>
                <option value="Delivered" <%= item.itemStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                <option value="Cancelled" <%= item.itemStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
              </select>
              <button class="btn btn-sm btn-primary update-status-btn">Update</button>
            </div>
          </td>

          <td class="text-center" data-cell-id="<%= item._id %>">
          <% if (item.returnStatus === "Requested") { %>
            <span class="badge bg-warning text-dark">Requested</span><br>
            <small class="text-muted">Reason: <%= item.returnReason || "-" %></small><br>
            <div class="mt-1 d-flex justify-content-center gap-2">
              <button class="btn btn-sm btn-success approve-return-btn" 
                data-order-id="<%= order.orderId %>" data-item-id="<%= item._id %>">Approve</button>
              <button class="btn btn-sm btn-danger reject-return-btn" 
                data-order-id="<%= order.orderId %>" data-item-id="<%= item._id %>">Reject</button>
            </div>
          <% } else if (item.returnStatus === "Rejected") { %>
            <span class="badge bg-danger">Rejected</span>
          <% } else if (["Approved", "Pickup Scheduled", "Picked Up", "In Transit", "Received", "Refunded", "Replacement Shipped"].includes(item.returnStatus)) { %>
            <div class="d-flex justify-content-center align-items-center gap-2">
              <select class="form-select form-select-sm w-auto return-status-select" 
                data-order-id="<%= order.orderId %>" data-item-id="<%= item._id %>">
                <option value="Approved" <%= item.returnStatus === 'Approved' ? 'selected' : '' %>>Approved</option>
                <option value="Pickup Scheduled" <%= item.returnStatus === 'Pickup Scheduled' ? 'selected' : '' %>>Pickup Scheduled</option>
                <option value="Picked Up" <%= item.returnStatus === 'Picked Up' ? 'selected' : '' %>>Picked Up</option>
                <option value="In Transit" <%= item.returnStatus === 'In Transit' ? 'selected' : '' %>>In Transit</option>
                <option value="Received" <%= item.returnStatus === 'Received' ? 'selected' : '' %>>Received</option>
                <option value="Refunded" <%= item.returnStatus === 'Refunded' ? 'selected' : '' %>>Refunded</option>
                <option value="Replacement Shipped" <%= item.returnStatus === 'Replacement Shipped' ? 'selected' : '' %>>Replacement Shipped</option>
              </select>
              <button class="btn btn-sm btn-primary update-return-status-btn">Update</button>
            </div>
          <% } else { %>
            <span>-</span>
          <% } %>
        </td>


        </tr>
      <% }) %>
    </tbody>
</table>



</div>


  <a href="/admin/orders" class="btn btn-secondary">Back</a>
</div>
</div>
<script>
document.querySelectorAll(".update-status-btn").forEach(btn => {
  btn.addEventListener("click", async (e) => {
    const row = e.target.closest("tr");
    const select = row.querySelector(".status-select");
    const orderId = select.dataset.orderId;
    const itemId = select.dataset.itemId;
    const status = select.value;

    try {
      const response = await fetch("/admin/orders/order-details/update-item-status", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ orderId, itemId, status })
      });
      const result = await response.json();

      if (result.success) {
        // alert("Status updated successfully!");
        Swal.fire({
          timer:1500,
          icon:'success',
          title:"Status updated"
        })
        document.getElementById("order-status").innerText = result.orderStatus;
      } else {
        alert(result.message || "Failed to update");
      }
    } catch (err) {
      console.error("Error:", err);
      alert("Something went wrong");
    }
  });
});
</script>

<script>
document.addEventListener("DOMContentLoaded", () => {

  // One event listener for everything
  document.addEventListener("click", async (e) => {
    const target = e.target;

    // ðŸŸ¢ Handle Approve button
    if (target.classList.contains("approve-return-btn")) {
      handleReturnAction(target.dataset.orderId, target.dataset.itemId, "approve");
    }

    // ðŸ”´ Handle Reject button
    else if (target.classList.contains("reject-return-btn")) {
      handleReturnAction(target.dataset.orderId, target.dataset.itemId, "reject");
    }

    // ðŸŸ¡ Handle Update return status button
    else if (target.classList.contains("update-return-status-btn")) {
      const row = target.closest("tr");
      const select = row.querySelector(".return-status-select");
      const orderId = select.dataset.orderId;
      const itemId = select.dataset.itemId;
      const status = select.value;

      try {
        const res = await fetch(`/admin/orders/return/update-status`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ orderId, itemId, status })
        });
        const data = await res.json();

        if (data.success) {
          Swal.fire("Updated!", "Return status updated successfully.", "success");
        } else {
          Swal.fire("Error", data.message || "Failed to update", "error");
        }
      } catch (err) {
        console.error("Error:", err);
        Swal.fire("Error", "Something went wrong", "error");
      }
    }
  });


  // Function for approve / reject
  async function handleReturnAction(orderId, itemId, action) {
    const confirm = await Swal.fire({
      title: `Are you sure to ${action}?`,
      text: `This action cannot be undone`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: action === "approve" ? "#198754" : "#dc3545",
      cancelButtonColor: "#6c757d",
      confirmButtonText: `Yes, ${action}`
    });

    if (confirm.isConfirmed) {
      const res = await fetch(`/admin/orders/${orderId}/return/${itemId}/${action}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" }
      });

      const data = await res.json();

      if (data.success) {
        Swal.fire({
          title: `Return ${action}d`,
          icon: "success",
          timer: 1500,
          showConfirmButton: false
        });

        // Update the return cell UI
        const cell = document.querySelector(`[data-cell-id="${itemId}"]`);
        if (cell) {
          cell.innerHTML = ""; // clear old content

          if (action === "approve") {
            // Insert dropdown + update button
            const select = document.createElement("select");
            select.className = "form-select return-status-select";
            select.dataset.orderId = orderId;
            select.dataset.itemId = itemId;
            ["Approved","Pickup Scheduled", "Picked Up","In Transist","Received", "Refunded"].forEach(opt => {
              const option = document.createElement("option");
              option.value = opt;
              option.textContent = opt;
              select.appendChild(option);
            });

            const btn = document.createElement("button");
            btn.className = "btn btn-sm btn-primary update-return-status-btn mt-2";
            btn.textContent = "Update";

            cell.appendChild(select);
            cell.appendChild(btn);
          } else {
            // Show rejected badge
            const badge = document.createElement("span");
            badge.className = "badge bg-danger";
            badge.textContent = "Rejected";
            cell.appendChild(badge);
          }
        }
      } else {
        Swal.fire("Error", "Something went wrong", "error");
      }
    }
  }

});


</script>


<%- include("../../../views/partials/admin/footer") %>