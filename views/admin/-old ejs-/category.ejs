<%-include ('../../views/partials/admin/header')%>

   <style>
    body{
        height: 1000px;
    }
/* Main Content Styles */
.main-content {
    margin-left: 250px;
    margin-top: 70px;
    padding: 2rem;
    min-height: calc(100vh - 120px);
    background-color: #f8f9fa;
    color: #333;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* Form Styles */
.main-content h2 {
    color: #2c3e50;
    margin-bottom: 1.5rem;
    font-size: 1.8rem;
    border-bottom: 2px solid #eaeaea;
    padding-bottom: 0.5rem;
}

.main-content form {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
}

.main-content label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: #495057;
}

.main-content input[type="text"],
.main-content textarea {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1rem;
    border: 1px solid #ced4da;
    border-radius: 4px;
    font-size: 1rem;
    transition: border-color 0.3s;
}

.main-content input[type="text"]:focus,
.main-content textarea:focus {
    border-color: #80bdff;
    outline: none;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.main-content textarea {
    min-height: 100px;
    resize: vertical;
}

.main-content button[type="submit"] {
    background-color: #28a745;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s;
}

.main-content button[type="submit"]:hover {
    background-color: #218838;
}

/* Search Form */
.main-content form.d-inline {
    display: inline-block;
    width: 100%;
    margin-bottom: 2rem;
    background: none;
    box-shadow: none;
    padding: 0;
}

.main-content form.d-inline div {
    display: flex;
    gap: 0.5rem;
}

.main-content form.d-inline input {
    flex-grow: 1;
    max-width: 400px;
}

.main-content form.d-inline .btn {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
}

.main-content form.d-inline .btn:hover {
    background-color: #0069d9;
}

/* Table Styles */
.main-content table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 2rem;
    background: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    border-radius: 8px;
    overflow: hidden;
}

.main-content table thead {
    background-color: #2c3e50;
    color: white;
}

.main-content table th {
    padding: 1rem;
    text-align: left;
}

.main-content table td {
    padding: 0.75rem 1rem;
    border-bottom: 1px solid #eaeaea;
}

.main-content table tr:last-child td {
    border-bottom: none;
}

.main-content table tr:hover {
    background-color: #f8f9fa;
}

.main-content table button {
    background-color: transparent;
    border: 1px solid #ddd;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    cursor: pointer;
    margin-right: 0.5rem;
    transition: all 0.3s;
}

.main-content table button:hover {
    background-color: #f1f1f1;
}

.main-content table a {
    color: #007bff;
    text-decoration: none;
}

.main-content table a:hover {
    text-decoration: underline;
}

/* Status Indicators */
.main-content span {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.85rem;
}

.main-content span:first-child {
    background-color: #d4edda;
    color: #155724;
}

.main-content span:last-child {
    background-color: #f8d7da;
    color: #721c24;
}

/* Pagination Styles */
.main-content div[style*="display: flex"] {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 2rem;
}

.main-content div[style*="display: flex"] a {
    padding: 0.5rem 1rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    color: #007bff;
    text-decoration: none;
    transition: all 0.3s;
}

.main-content div[style*="display: flex"] a:hover {
    background-color: #f8f9fa;
}

.main-content .current-page {
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    border-radius: 4px;
}

/* Error Messages */
.error-message {
    color: #dc3545;
    font-size: 0.85rem;
    margin-top: -0.5rem;
    margin-bottom: 0.5rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .main-content {
        margin-left: 70px;
    }
    
    .main-content table {
        display: block;
        overflow-x: auto;
    }
}

@media (max-width: 480px) {
    .main-content {
        padding: 1rem;
    }
    
    .main-content form.d-inline div {
        flex-direction: column;
    }
    
    .main-content form.d-inline input {
        max-width: 100%;
    }
    
    .main-content table th,
    .main-content table td {
        padding: 0.5rem;
    }
}
</style>
 
<section class="main-content">
    <h2>Category Management</h2>

    <!-- Search Form -->
    <form action="/admin/category/" method="get" class="d-inline">
        <div>
            <input type="text" 
                    placeholder="Search categories"
                    value="<%if(search.length>0){%><%=search%><%}%>"
                    name="search"/>
            <button class="btn" type="submit">Search</button>
        </div>
    </form>
    <% if(search){ %>
    <a href="/admin/category" class="btn btn-outline-primary">
      Clear
    </a>
    <% }else{ %>
      <button class="btn btn-outline-primary" disabled>
         Clear
      </button>
    <% } %>
    
    <!-- Add Category Form -->
     <h4>Add new category</h4>
    <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
        <div>
            <label for="category_name" class="form-label">Name</label>
            <input type="text" name="name" placeholder="Type here" id="product_name" required />
            <div id="name-error" class="error-message"></div>
        </div>
        <div>
            <label>Description</label>
            <textarea placeholder="Type here" name="description" id="descriptionId" required></textarea>
            <div id="description-error" class="error-message"></div>
        </div>
        <div>
            <button type="submit">Create category</button>
        </div>
    </form>

    <!-- Categories Table -->
    <table>
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Description</th>
                <th>Offer Price</th>
                <th>Offer</th>
                <th>Status</th>
                <th>List/Unlist</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            <%cat.forEach((category,index)=>{%>
                <tr>
                    <td><%= index+1 %></td>
                    <td><%= category.name %></td>
                    <td><%= category.description %></td>
                    <td><%if(category.categoryOffer){ %>
                        <%= category.categoryOffer %>
                        <% }else{ %>
                            0%
                        <% } %></td>
                    <td>
                        <% if(category.categoryOffer===0){ %>
                        <button>
                            <a href="#" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                        </button>
                        <% }else{ %>
                        <button>
                            <a href="#" onclick="removeOffer('<%= category._id %>')">Remove</a>
                        </button>
                        <% } %>
                    </td>
                    <td>
                        <% if(category.isListed){ %>
                        <span>Listed</span>
                            <% }else{ %>
                        <span>Unlisted</span>
                            <% } %>
                    </td>
                    <td>
                        <% if(category.isListed){ %>
                        <button><a href="/admin/list-category?id=<%= category._id %>">Unlist</a></button>
                        <% }else{ %>
                        <button><a href="/admin/unlist-category?id=<%= category._id %>">List</a></button>
                        <% } %>
                    </td>
                    <td>
                        <a href="/admin/edit-category?id=<%= category._id %>">Edit</a>
                    </td>
                </tr>
            <%})%>
        </tbody>
    </table>

    <!-- Pagination -->
    <div style="display: flex; justify-content: center; gap: 0.5rem;">
        <% if(currentPage>1){ %>
            <a href="?page=<%= currentPage -1 %>">&laquo; Previous</a>
        <% } %>
        
        <% for(let i=1;i<=totalPages;i++){ %>
            <% if(i===currentPage){ %>
                <span class="current-page"><%= i %></span>
            <% } else { %>
                <a href="?page=<%= i %>"><%= i %></a>
            <% } %>
        <% } %>
        
        <% if(currentPage<totalPages){ %>
            <a href="?page=<%= currentPage +1 %>">Next &raquo;</a>
        <% } %>
    </div>
</section>
    <%-include ('../../views/partials/admin/footer')%>
    <script>
        function handleFormSubmit(event) {
            event.preventDefault();
            if (!validateForm()) {
                return
            }
            const name = document.getElementsByName('name')[0].value;
            const description = document.getElementById('descriptionId').value;

            fetch('/admin/add-category', {
                method: 'POST',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({ name, description })
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(err.error);
                        })
                    }
                    return response.json();
                })
                .then(data => {
                    location.reload();
                })
                .catch(error => {
                    if (error.message === "Category already exists") {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops',
                            text: 'Category already exists'
                        })
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "oops",
                            text: 'An error occured while adding the category',
                        })
                    }
                })
        }

        function validateForm() {
            clearErrorMessage();
            const name = document.getElementsByName('name')[0].value.trim();
            const description = document.getElementById('descriptionId').value.trim();
            isValid = true;


            if (name === "") {
                displayErrorMessage('name-error', 'Please Enter a name');
                isValid = false
            } else if (!/[a-zA-Z\s]+$/.test(name)) {
                displayErrorMessage('name-error', 'Category name should contain only alphabetic characters')
                isValid = false;
            }

            if (description === '') {
                displayErrorMessage('description-error', 'Please enter a description')
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerHTML = message;
            errorElement.style.display = 'block';
        }

        function clearErrorMessage() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach((element) => {
                element.innerText = "";
                element.style.display = 'none';
            });
        }

        async function addOffer(categoryId) {
            const {value:amount}=await Swal.fire({
                title:"Offer in percentage",
                input:'number',
                inputLabel:"Percentage",
                inputPlaceholder:"%"
            });
            
            if(amount){
                try {
                    const response=await fetch('/admin/add-category-offer',{
                        method:"POST",
                        headers:{
                            'content-type':'application/json'
                        },
                        body:JSON.stringify({
                            percentage:amount,
                            categoryId:categoryId
                        })
                    })
                    const data=await response.json();
                    if(response.ok && data.status===true){
                        Swal.fire(
                            "Offer added",
                            "The offer has been added",
                            "success"
                        ).then(()=>{
                            location.reload();
                        })
                    }else{
                        Swal.fire("Failed",data.message || "Adding offer failed" , "error");
                    }
                } catch (error) {
                    Swal.fire(
                        "Error",
                        "An error occured while adding the offer",
                        "error"
                    );
                    console.log("Error adding offer:",error)
                }
            }
        }


        async function removeOffer(categoryId){
            console.log("remove offer has started")
            try {
                const response= await fetch('/admin/remove-category-offer',{
                    method:"POST",
                    headers:{
                        "content-type":"application/json"
                    },
                    body:JSON.stringify({
                        categoryId:categoryId
                    })
                });

                const data =await response.json();
                if(response.ok && data.status===true){
                    Swal.fire(
                        "Offer removed",
                        "The offer haas been removed",
                        "success"
                    ).then(()=>{
                        location.reload();
                    });
                }else{
                    Swal.fire("Failed",data.message||"Removing offer failed","error");
                }
            } catch (error) {
                Swal.fire(
                    "Error",
                    "An error occured while removing the offer",
                    "error"
                );
                console.error("Error removing offer:",error)
            }
        }


    </script>