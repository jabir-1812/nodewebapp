<%- include("../../views/partials/admin/header") %>

    <!-- CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />


    
   
   <style>
body{
    height: 3000px;
}

  /* Main Content Styles */
  .main-content {
    margin-left: 250px;
    margin-top: 70px;
    padding: 2rem;
    min-height: calc(100vh - 120px);
    background-color: #f8fafc;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }

  /* Content Header */
  .content-header {
    margin-bottom: 2rem;
  }

  .content-title {
    color: #1e293b;
    font-size: 1.75rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  /* Card Styles */
  .card {
    border: none;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    background: #ffffff;
    margin-bottom: 1.5rem;
  }

  .card-header {
    background-color: #f8fafc;
    border-bottom: 1px solid #e2e8f0;
    padding: 1.25rem 1.5rem;
    font-weight: 600;
    color: #1e293b;
  }

  .card-body {
    padding: 1.5rem;
  }

  /* Form Elements */
  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #475569;
    font-size: 0.95rem;
  }

  .form-control, .form-select {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 0.95rem;
    background-color: #ffffff;
    transition: all 0.2s ease;
  }

  .form-control:focus, .form-select:focus {
    border-color: #60a5fa;
    box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.2);
    outline: none;
  }

  textarea.form-control {
    min-height: 120px;
    resize: vertical;
  }

  /* Error Messages */
  .error-message {
    color: #dc2626;
    font-size: 0.85rem;
    margin-top: 0.25rem;
    display: none;
  }

  /* Image Upload Styles */
  .thumbnails-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 1rem;
  }

  .image-upload-container {
    margin-bottom: 1.5rem;
    position: relative;
  }

  .image-upload-container img {
    max-width: 120px;
    max-height: 120px;
    border-radius: 8px;
    margin-bottom: 0.5rem;
    display: none;
    border: 1px dashed #cbd5e1;
    padding: 0.5rem;
  }

  .image-cropper {
    display: none;
    margin-top: 1rem;
    border: 1px dashed #cbd5e1;
    border-radius: 8px;
    padding: 1rem;
    background-color: #f8fafc;
    position: relative;
  }

  .image-cropper img {
    max-width: 100%;
    max-height: 180px;
    display: block;
    margin: 0 auto;
  }

  /* Button Styles */
  .btn {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 500;
    font-size: 0.95rem;
    transition: all 0.2s ease;
    cursor: pointer;
    border: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  .btn-primary {
    background-color: #3b82f6;
    color: white;
  }

  .btn-primary:hover {
    background-color: #2563eb;
  }

  .btn-dark {
    background-color: #1e293b;
    color: white;
  }

  .btn-dark:hover {
    background-color: #0f172a;
  }

  .btn-sm {
    padding: 0.5rem 1rem;
    font-size: 0.85rem;
  }

  /* Layout */
  .row {
    display: flex;
    flex-wrap: wrap;
    margin: -0.75rem;
  }

  .col-lg-4, .col-lg-6, .col-9, .col-sm-6 {
    padding: 0.75rem;
  }

  .col-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }

  .col-lg-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }

  .col-lg-4 {
    flex: 0 0 33.333%;
    max-width: 33.333%;
  }

  .col-sm-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }

  .mb-4 {
    margin-bottom: 1.5rem;
  }

  .mb-3 {
    margin-bottom: 1rem;
  }

  .mb-2 {
    margin-bottom: 0.5rem;
  }

  .mt-20 {
    margin-top: 1.25rem;
  }

  /* Responsive Design */
  @media (max-width: 992px) {
    .col-lg-6 {
      flex: 0 0 100%;
      max-width: 100%;
    }
  }

  @media (max-width: 768px) {
    .main-content {
      margin-left: 70px;
      padding: 1.5rem;
    }
    
    .col-lg-4 {
      flex: 0 0 50%;
      max-width: 50%;
    }
  }

  @media (max-width: 576px) {
    .main-content {
      padding: 1rem;
    }
    
    .col-lg-4, .col-sm-6 {
      flex: 0 0 100%;
      max-width: 100%;
    }
    
    .card-body {
      padding: 1rem;
    }
  }
</style>

<section class="main-content">
  <div class="row">
    <div class="col-9">
      <div class="content-header">
        <h2 class="content-title">Add New Product</h2>
      </div>
    </div>
  </div>
  
  <div class="row">
    <div class="col-lg-6">
      <form method="post" action="/admin/add-products" enctype="multipart/form-data" onsubmit="return validateForm()">
        <!-- Product Details Card -->
        <div class="card mb-4">
          <div class="card-body">
            <div class="mb-4">
              <label for="product_name" class="form-label">Product Name</label>
              <input type="text" placeholder="Enter product name" name="productName" class="form-control" id="product_name" required>
              <div id="productName-error" class="error-message"></div>
            </div>
            
            <div class="mb-4">
              <label class="form-label">Brand</label>
              <select class="form-select" name="brand" required>
                <% for(let i=0;i<brand.length;i++){ %>
                  <option value="<%= brand[i].brandName %>">
                    <%= brand[i].brandName %>
                  </option>
                <% } %>
              </select>
              <div id="brand-error" class="error-message"></div>
            </div>
            
            <div class="mb-4">
              <label class="form-label">Full Description</label>
              <textarea placeholder="Enter product description" id="descriptionid" name="description" class="form-control" rows="4" required></textarea>
              <div id="description-error" class="error-message"></div>
            </div>
          </div>
        </div>
        
        <!-- Pricing Card -->
        <div class="card mb-4">
          <div class="card-body">
            <div class="row">
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Regular Price</label>
                  <div class="input-group">
                    <span class="input-group-text">$</span>
                    <input placeholder="0.00" name="regularPrice" type="number" step="0.01" class="form-control" required>
                  </div>
                  <div id="regularPrice-error" class="error-message"></div>
                </div>
              </div>
              
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Sale Price</label>
                  <div class="input-group">
                    <span class="input-group-text">$</span>
                    <input placeholder="0.00" name="salePrice" type="number" step="0.01" class="form-control">
                  </div>
                  <div id="salePrice-error" class="error-message"></div>
                </div>
              </div>
              
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Quantity</label>
                  <input placeholder="0" name="quantity" type="number" class="form-control" required>
                  <div id="quantity-error" class="error-message"></div>
                </div>
              </div>
            </div>
            
            <div class="row">
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Color</label>
                  <input name="color" type="text" placeholder="Enter color" class="form-control">
                  <div id="color-error" class="error-message"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Category Card -->
        <div class="card mb-4">
          <div class="card-body">
            <div class="row gx-2">
              <div class="col-sm-6 mb-3">
                <label class="form-label">Category</label>
                <select class="form-select" name="category" required>
                  <% for(let i=0;i<cat.length;i++){ %>
                    <option value="<%= cat[i].name %>">
                      <%= cat[i].name %>
                    </option>
                  <% } %>
                </select>
                <div id="category-error" class="error-message"></div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Image Upload Card -->
        <div class="card mb-4">
          <div class="card-header">
            <h4>Product Images</h4>
          </div>
          <div class="card-body">
            <div class="border rounded p-3 mb-3">
              <div id="addedImagesContainer" class="thumbnails-container"></div>
            </div>
            
            <!-- Image Upload Fields -->
            <div class="image-upload-container">
              <img src="" alt="Preview 1" id="imgView1" class="img-preview">
              <input class="form-control mb-2" type="file" name="images" id="input1" accept="image/*" onchange="viewImage1(event), viewImage(event, 1)" required>
              <div id="images-error" class="error-message">Please upload at least one image</div>
            </div>
            
            <div class="image-upload-container">
              <img src="" alt="Preview 2" id="imgView2" class="img-preview">
              <input class="form-control mb-2" type="file" name="images" id="input2" accept="image/*" onchange="viewImage2(event),viewImage(event, 2)">
            </div>
            
            <div class="image-upload-container">
              <img src="" alt="Preview 3" id="imgView3" class="img-preview">
              <input class="form-control mb-2" type="file" name="images" id="input3" accept="image/*" onchange="viewImage3(event),viewImage(event, 3)">
            </div>
            
            <div class="image-upload-container">
              <img src="" alt="Preview 4" id="imgView4" class="img-preview">
              <input class="form-control mb-2" type="file" name="images" id="input4" accept="image/*" onchange="viewImage4(event),viewImage(event, 4)">
            </div>
          </div>
        </div>
        
        <!-- Submit Button -->
        <div class="text-end">
          <button class="btn btn-dark" type="button" onclick="validateAndSubmit()">
            Publish Product
          </button>
        </div>
      </form>
    </div>
  </div>
</section>

   
    <!-- <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script> -->
     <!-- JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

    <script>
        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit();
            }
        }


        function viewImage1(event){
            document.getElementById('imgView1').src=URL.createObjectURL(event.target.files[0])
        }

        
        function viewImage2(event){
            document.getElementById('imgView2').src=URL.createObjectURL(event.target.files[0])
        }

        
        function viewImage3(event){
            document.getElementById('imgView3').src=URL.createObjectURL(event.target.files[0])
        }

        
        function viewImage4(event){
            document.getElementById('imgView4').src=URL.createObjectURL(event.target.files[0])
        }

        function viewImage(event,index){
            let input =event.target;
            let reader=new FileReader();
            reader.onload=function(){
                let dataURL=reader.result;
                let image=document.getElementById('imgView'+index);
                image.src=dataURL;
                let cropper=new Cropper(image,{
                    aspectRatio:1,
                    viewMode:1,
                    guides:true,
                    background:false,
                    autoCropArea:1,
                    zoomable:true
                });

                let cropperContainer=document.querySelector('#croppedImg'+ index).parentNode;
                cropperContainer.style.display="block";

                let saveButton=document.querySelector('#saveButton'+index);
                saveButton.addEventListener('click',async function(){

                    let croppedCanvas=cropper.getCroppedCanvas();
                    let croppedImage=document.getElementById("croppedImg"+index);
                    croppedImage.src=croppedCanvas.toDataURL('image/jpeg',1.0);

                    let timestamp=new Date().getTime();
                    let fileName=`cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob=>{
                        let input=document.getElementById('input'+index);
                        let imgFile=new File([blob],fileName,blob)
                        const fileList=new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files=fileList.files
                    });

                    cropperContainer.style.display='none';
                    cropper.destroy();
                })
            }
            reader.readAsDataURL(input.files[0]);
        }

        const selectedImages=[];
        document.getElementById('input1').addEventListener('change',handleFileSelect);

        function handleFileSelect(event){
            const addedImagesContainer=document.getElementById('addedImagesContainer')
            addedImagesContainer.innerHTML="";
            const files=event.target.files;
            for(let i=0;i<files.length;i++){
                const file=files[i];
                selectedImages.push(file);
                const thumbnail=document.createElement('div');
                thumbnail.classList.add('thumbnail');

                const img=document.createElement('img');
                img.src=URL.createObjectURL(file);
                img.alt='thumbnail';
                img.style.width="50px";
                img.style.height="auto";
                const removeIcon=document.createElement('span');
                removeIcon.classList.add('remove-icon');
                removeIcon.innerHTML="&times;";
                removeIcon.addEventListener('click',function(){
                    const index=selectedImages.indexOf(file);
                    if(index!==-1){
                        selectedImages.splice(index,1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const brand = document.getElementsByName('brand')[0].value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const color = document.getElementsByName('color')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1')
            // const quantity = document.getElementsByName('quantity');
            const quantity = document.getElementsByName('quantity')[0].value;
            let isValid = true
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
                displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
                isValid = false;
            }

            if (description.trim() === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
                displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
                isValid = false;
            }





            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }




            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }




            if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }
            if (parseFloat(price) <= parseFloat(saleprice)) {
                displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                isValid = false;
            }


            if (color.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }


            if (images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }
            return isValid;
        }


        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }


        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
            const errorMessage = document.getElementById('errorMessage');


        }



    </script>
    <%- include("../../views/partials/admin/footer") %>